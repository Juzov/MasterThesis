!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
calcCost	ewkm.c	/^float calcCost(double *x, 	\/\/ Numeric matrix as vector by col (nr*nc)$/;"	f
calculate_cost	fgkm.c	/^double calculate_cost(const double *x, const int *nr, const int *nc,$/;"	f
eu_distance	Utils.c	/^double eu_distance(const double f1, const double f2) {$/;"	f
ewkm	ewkm.c	/^void ewkm( \/\/ Inputs ----------------------------------------------------------$/;"	f
expNormalize	Utils.c	/^void expNormalize(double *a, int length, double minValue) {$/;"	f
fgkm	fgkm.c	/^void fgkm(const double *x, const int *nr, const int *nc, const int *k,$/;"	f
initPrototypes	ewkm.c	/^void initPrototypes( \/\/ Inputs ---------------------------------------------$/;"	f
init_centers	Utils.c	/^void init_centers(const double *x, const int *nr, const int *nc, const int *k,$/;"	f
init_featureWeight	fgkm.c	/^void init_featureWeight(double *featureWeight, const int *k, const int *nc,$/;"	f
init_groupWeight	fgkm.c	/^void init_groupWeight(double *groupWeight, const int *k, const int *numGroups) {$/;"	f
parseGroup	Utils.c	/^void parseGroup(const char **strGroup, \/\/ string of group information, formatted as "0,1,2,4;3,5;6,7,8" or "0-2,4;3,4,8;6-8", where ";" defines a group;$/;"	f
sum_squares	Utils.c	/^void sum_squares(const double *x, \/\/ Data matrix$/;"	f
twkm	twkm.c	/^void twkm(const double *x, const int *nr, const int *nc, const int *k,$/;"	f
twkm_calculate_cost	twkm.c	/^double twkm_calculate_cost(const double *x, const int *nr, const int *nc,$/;"	f
twkm_init_featureWeight	twkm.c	/^void twkm_init_featureWeight(double *featureWeight, const int *nc,$/;"	f
twkm_init_groupWeight	twkm.c	/^void twkm_init_groupWeight(double *groupWeight, const int *numGroups) {$/;"	f
twkm_update_centers	twkm.c	/^int twkm_update_centers(const double *x, const int *nr, const int *nc,$/;"	f
twkm_update_cluster	twkm.c	/^void twkm_update_cluster(const double *x, const int *nr, const int *nc,$/;"	f
twkm_update_featureWeight	twkm.c	/^void twkm_update_featureWeight(const double *x, const int *nr, const int *nc,$/;"	f
twkm_update_groupWeight	twkm.c	/^void twkm_update_groupWeight(const double *x, const int *nr, const int *nc,$/;"	f
updPartition	ewkm.c	/^void updPartition(  \/\/ Inputs$/;"	f
updPrototypes	ewkm.c	/^int updPrototypes(  \/\/ Inputs ---------------------------------------------$/;"	f
updWeights	ewkm.c	/^void updWeights( \/\/ Inputs -------------------------------------------------------$/;"	f
update_centers	fgkm.c	/^int update_centers(const double *x, const int *nr, const int *nc, const int *k,$/;"	f
update_cluster	fgkm.c	/^void update_cluster(const double *x, const int *nr, const int *nc, const int *k,$/;"	f
update_featureWeight	fgkm.c	/^void update_featureWeight(const double *x, const int *nr, const int *nc,$/;"	f
update_groupWeight	fgkm.c	/^void update_groupWeight(const double *x, const int *nr, const int *nc,$/;"	f
